//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyClient.WcfService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfService.IWcfService", CallbackContract=typeof(global::MyClient.WcfService.IWcfServiceCallback))]
    public interface IWcfService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/GetValueSynchronously", ReplyAction="http://tempuri.org/IWcfService/GetValueSynchronouslyResponse")]
        string GetValueSynchronously(int returnId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/GetValueSynchronously", ReplyAction="http://tempuri.org/IWcfService/GetValueSynchronouslyResponse")]
        System.Threading.Tasks.Task<string> GetValueSynchronouslyAsync(int returnId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/GetValueAsynchronously", ReplyAction="http://tempuri.org/IWcfService/GetValueAsynchronouslyResponse")]
        void GetValueAsynchronously(int returnid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/GetValueAsynchronously", ReplyAction="http://tempuri.org/IWcfService/GetValueAsynchronouslyResponse")]
        System.Threading.Tasks.Task GetValueAsynchronouslyAsync(int returnid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWcfService/GetValueAsynchronouslyCallback", ReplyAction="http://tempuri.org/IWcfService/GetValueAsynchronouslyCallbackResponse")]
        void GetValueAsynchronouslyCallback(string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWcfServiceChannel : global::MyClient.WcfService.IWcfService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WcfServiceClient : System.ServiceModel.DuplexClientBase<global::MyClient.WcfService.IWcfService>, global::MyClient.WcfService.IWcfService {
        
        public WcfServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public WcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public WcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public WcfServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public string GetValueSynchronously(int returnId) {
            return base.Channel.GetValueSynchronously(returnId);
        }
        
        public System.Threading.Tasks.Task<string> GetValueSynchronouslyAsync(int returnId) {
            return base.Channel.GetValueSynchronouslyAsync(returnId);
        }
        
        public void GetValueAsynchronously(int returnid) {
            base.Channel.GetValueAsynchronously(returnid);
        }
        
        public System.Threading.Tasks.Task GetValueAsynchronouslyAsync(int returnid) {
            return base.Channel.GetValueAsynchronouslyAsync(returnid);
        }
    }
}
